name: Create Release After Tag

on:
  workflow_run:
    workflows: ["Create Tag on Commit"]
    types:
      - completed
    branches:
      - main

jobs:
  create-release:
    # Only run if the tag workflow was successful
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Get commit details
        id: commit-details
        run: |
          echo "DEBUG: Workflow run information"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"
          echo "SHA: ${{ github.event.workflow_run.head_sha }}"
          echo "Workflow: ${{ github.event.workflow_run.workflow_id }}"
          echo "Status: ${{ github.event.workflow_run.conclusion }}"
          
          echo "Current git status:"
          git status
          
          echo "Available tags:"
          git tag -l
          
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "commit_msg=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Get latest tag
        id: get-tag
        run: |
          # Get the latest tag created by the auto-tag workflow
          git fetch --tags origin
          
          echo "All remote tags:"
          git ls-remote --tags origin
          
          # Check for the SHA that triggered this workflow
          TRIGGER_SHA="${{ github.event.workflow_run.head_sha }}"
          echo "Looking for tags pointing to commit SHA: $TRIGGER_SHA"
          
          # Get tags for the trigger commit
          COMMIT_TAGS=$(git tag --points-at $TRIGGER_SHA 2>/dev/null || echo "")
          
          if [ -n "$COMMIT_TAGS" ]; then
            echo "Tags found for this commit: $COMMIT_TAGS"
            # Get the latest semver tag from the commit's tags
            LATEST_TAG=$(echo "$COMMIT_TAGS" | grep -E "^v[0-9]+\.[0-9]+\.[0-9]+$" | sort -V | tail -n 1)
          else
            echo "No tags found specifically for this commit, using latest tag instead"
            # Fallback to latest tag in the repository
            LATEST_TAG=$(git tag -l "v*" | sort -V | tail -n 1)
          fi
          
          if [ -z "$LATEST_TAG" ]; then
            echo "Error: No valid tags found" >&2
            exit 1
          fi
          
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Found tag to use for release: $LATEST_TAG"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get-tag.outputs.tag }}
          tag_name: ${{ steps.get-tag.outputs.tag }}
          body: |
            Automated release ${{ steps.get-tag.outputs.tag }}
            
            Commit SHA: ${{ steps.commit-details.outputs.sha_short }}
            Commit message: ${{ steps.commit-details.outputs.commit_msg }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

