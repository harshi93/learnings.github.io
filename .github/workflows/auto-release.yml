name: Create Release on Commit

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get commit details
        id: commit-details
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "commit_msg=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Determine next version
        id: semver
        run: |
          # Get the latest tag if it exists
          git fetch --tags
          LATEST_TAG=$(git tag -l "v*" | sort -V | tail -n 1)
          
          # Set default version if no tags found
          if [ -z "$LATEST_TAG" ]; then
            NEW_VERSION="v1.0.0"
          else
            # Extract the version numbers
            MAJOR=$(echo $LATEST_TAG | sed 's/v\([0-9]*\)\.[0-9]*\.[0-9]*/\1/')
            MINOR=$(echo $LATEST_TAG | sed 's/v[0-9]*\.\([0-9]*\)\.[0-9]*/\1/')
            PATCH=$(echo $LATEST_TAG | sed 's/v[0-9]*\.[0-9]*\.\([0-9]*\)/\1/')
            
            # Check commit message for keywords to determine version bump
            if echo "${{ steps.commit-details.outputs.commit_msg }}" | grep -i -q "\bbreak\b\|\bmajor\b\|\bbreaking change\b"; then
              # Major version bump
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
            elif echo "${{ steps.commit-details.outputs.commit_msg }}" | grep -i -q "\badds\b\|\bbump\b\|\bfeat\b\|\bfeature\b\|\bminor\b"; then
              # Minor version bump
              MINOR=$((MINOR + 1))
              PATCH=0
            else
              # Patch version bump
              PATCH=$((PATCH + 1))
            fi
            
            NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          fi
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Determined next version: $NEW_VERSION"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.semver.outputs.new_version }}
          tag_name: ${{ steps.semver.outputs.new_version }}
          body: |
            Automated release ${{ steps.semver.outputs.new_version }}
            
            Commit SHA: ${{ steps.commit-details.outputs.sha_short }}
            Commit message: ${{ steps.commit-details.outputs.commit_msg }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

